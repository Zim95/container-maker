---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: browseterm # Replace with the correct namespace
  name: browseterm-cluster-role
rules:
- apiGroups: ["", "networking.k8s.io"]
  resources: ["namespaces", "pods", "pods/exec", "networkpolicies", "services", "endpoints", "service/status", "endpoints/status", "configmaps", "secrets"]
  verbs: ["list", "create", "delete", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: browseterm-cluster-role-binding
  namespace: browseterm # Replace with the correct namespace
subjects:
- kind: ServiceAccount
  name: default
  namespace: browseterm
roleRef:
  kind: ClusterRole
  name: browseterm-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-maker
  namespace: browseterm  # Added namespace
  labels:
    app: container-maker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: container-maker
  template:
    metadata:
      labels:
        app: container-maker
    spec:
      containers:
      - name: container-maker
        image: zim95/container-maker:latest  # Your gRPC API Docker image
        ports:
        - containerPort: 50051  # gRPC default port
        env:
        - name: SERVER_KEY
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: server.key
        - name: SERVER_CRT
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: server.crt
        - name: CLIENT_KEY
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: client.key
        - name: CLIENT_CRT
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: client.crt
        - name: CA_CRT
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: ca.crt
      volumes: []  # No volumes needed since we're using environment variables
---
apiVersion: v1
kind: Service
metadata:
  name: container-maker-service
  namespace: browseterm  # Added namespace
  labels:
    app: container-maker
spec:
  ports:
    - protocol: TCP
      port: 50051
      targetPort: 50051
  selector:
    app: container-maker
  type: ClusterIP  # Use LoadBalancer for external access if needed
