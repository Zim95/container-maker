---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: resources-cluster-role
rules:
- apiGroups: ["", "networking.k8s.io"]
  resources: ["namespaces", "pods", "pods/exec", "networkpolicies", "services", "endpoints", "service/status", "endpoints/status", "configmaps", "secrets", "ingresses", "persistentvolumes", "persistentvolumeclaims"]
  verbs: ["list", "create", "delete", "get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: resources-sa
  namespace: ${NAMESPACE} # Namespace placeholder
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: resources-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: resources-sa
  namespace: ${NAMESPACE} # Namespace placeholder
roleRef:
  kind: ClusterRole
  name: resources-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-maker-development
  namespace: ${NAMESPACE} # Namespace placeholder
  labels:
    app: container-maker-development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-maker-development
  template:
    metadata:
      labels:
        app: container-maker-development
    spec:
      serviceAccountName: resources-sa
      containers:
      - name: container-maker-development
        image: zim95/container-maker-development:latest  # Your gRPC API Docker image
        ports:
        - containerPort: 50051  # gRPC default port
        env:
        - name: SERVER_KEY
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: server.key
        - name: SERVER_CRT
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: server.crt
        - name: CLIENT_KEY
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: client.key
        - name: CLIENT_CRT
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: client.crt
        - name: CA_CRT
          valueFrom:
            secretKeyRef:
              name: grpc-certs
              key: ca.crt
        - name: NFS_IP
          value: container-maker-nfs-server.default.svc.cluster.local
        - name: NFS_PATH
          value: /exports
        volumeMounts:
        - name: app-code
          mountPath: /app
      volumes:
      - name: app-code
        hostPath:
          path: ${HOSTPATH}
          type: Directory
